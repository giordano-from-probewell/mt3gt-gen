#include "F2837xD_Cla_typedefs.h"        // CLA type definitions
#include "F2837xD_device.h"              // F2837xD header file peripheral address definitions
#include "cla1_standard_shared.h"
#include "F2837xD_cla.h"
#include "F2837xD_piectrl.h"

#include "F2837xD_struct.h"
#include "fpu_rfft.h"
#include "CLAmath.h"
#include <stdint.h>


// Defines
#define CLA_DEBUG       1
#define PIEACK_GROUP5   0x0010
#define M_1_PI          0.31830988618379067154
#define EPSILON         1e-12

#define MAX_VOLTAGE     480.0
#define MAX_CURRENT     200.0

// 1e6 / 3600 = 277.7777778f  → evita divisão a cada chamada
#define UWH_PER_WATTSECOND  (277.7777777778f)
#define NWH_PER_WATTSECOND  (277777.7777777778f)

#define MAX_ENERGY_PER_CYCLE    MAX_VOLTAGE*MAX_CURRENT*UWH_PER_WATTSECOND
#define MIN_ENERGY_PER_CYCLE   -MAX_VOLTAGE*MAX_CURRENT*UWH_PER_WATTSECOND

#define MAX_ENERGY_PER_SAMPLE   MAX_VOLTAGE*MAX_CURRENT*NWH_PER_WATTSECOND
#define MIN_ENERGY_PER_SAMPLE  -MAX_VOLTAGE*MAX_CURRENT*NWH_PER_WATTSECOND

// Globals
// Note that the globals defined in the .cla source are global to the cla source
// file.  i.e. they may be shared across tasks. All of the data shared between
// the CLA and the C28x CPU must be defined in the C (or C++) code, and not the
// CLA code.  


//
// Task 1
//
__interrupt void Cla1Task1 ( void )
{

//#if (CLA_DEBUG==1)
//    __mdebugstop();
//#endif



}


//
// Task 2
//
__interrupt void Cla1Task2 ( void )
{
//#if (CLA_DEBUG==1)
//    __mdebugstop();
//#endif


}

//
// Task 3
//
__interrupt void Cla1Task3 ( void )
{
//#if (CLA_DEBUG==1)
//    __mdebugstop();
//#endif


}




















//
// Task 4
//
__interrupt void Cla1Task4 ( void )
{
#if (CLA_DEBUG==1)
    __mdebugstop();
#endif


}

//
// Task 5
//
__interrupt void Cla1Task5 ( void )
{


#if (CLA_DEBUG==1)
    __mdebugstop();
#endif




}

//
// Task 6
//
__interrupt void Cla1Task6 ( void )
{
#if (CLA_DEBUG==1)
    __mdebugstop();
#endif
}

//
// Task 7
//
__interrupt void Cla1Task7 ( void )
{
#if (CLA_DEBUG==1)
    __mdebugstop();
#endif
}

//
// Task 8
//
__interrupt void Cla1Task8 ( void )
{

#if (CLA_DEBUG==1)
    __mdebugstop();
#endif






}

//
// End of file
//
